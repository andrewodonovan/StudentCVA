# Generated by Django 3.0.2 on 2020-02-20 15:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Employer', models.CharField(default=None, max_length=100, verbose_name='Employer')),
                ('EmployerStartDate', models.DateField(default=None, verbose_name='Employer Start Date')),
                ('EmployerEndDate', models.DateField(default=None, verbose_name='Employer End Date')),
                ('EmployerDesc', models.CharField(default=None, max_length=250, verbose_name='Employer Description')),
                ('EmployerUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SkillsName', models.CharField(default=None, max_length=100, verbose_name='Skill Name')),
                ('SkillsDesc', models.CharField(default=None, max_length=250, verbose_name='Skill Description')),
                ('SkillsUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EducationInstitutionName', models.CharField(default=None, max_length=100, verbose_name='Institution Name')),
                ('EducationLevel', models.CharField(choices=[('Level 5', 'Leaving Cert.'), ('Level 6', 'Post-Leaving Cert. Course'), ('Level 7', 'Ordinary Bachelor Degree'), ('Level 8', 'Honours Bachelor Degree'), ('Level 9', "Master's Degree"), ('Level 10', 'Doctorate')], default=None, max_length=100, verbose_name='Education Level')),
                ('EducationStartDate', models.DateField(default=None, verbose_name='Education Start Date')),
                ('EducationEndDate', models.DateField(default=None, verbose_name='Education End Date')),
                ('EducationCaoCode', models.CharField(choices=[('N/A', 'N/A'), ('AL', 'Athlone Institute of Technology (AIT)'), ('CW', 'Institute of Technology, Carlow (Carlow IT)'), ('PC', 'Carlow College, St Patrick’s,'), ('CR', 'Cork Institute of Technology (CIT)'), ('CK', 'University College Cork (UCC)'), ('GC', 'Griffith College Cork'), ('AC', 'American College Dublin'), ('CT', 'CCT College Dublin'), ('CM', 'Marino Institute of Education'), ('DS', 'Dorset College'), ('DB', 'Dublin Business School'), ('DC', 'Dublin City University (DCU)'), ('DL', 'Dún Laoghaire Institute of Art'), ('GC', 'Griffith College Dublin'), ('ID', 'ICD Business School'), ('AD', 'National College of Art and Design'), ('NC', 'National College of Ireland (NCI)'), ('RC', 'Royal College of Surgeons'), ('NM', 'St Nicholas Montessori College'), ('TU', 'Technological University Dublin (TU Dublin)'), ('TR', 'Trinity College Dublin (TCD)'), ('DN', 'University College Dublin (UCD)'), ('DK', 'Dundalk Institute of Technology'), ('GA', 'Galway-Mayo Institute of Technology'), ('GY', 'National University of Ireland, Galway (NUIG)'), ('GB', 'Galway Business School'), ('MI', 'Mary Immaculate College'), ('GC', 'Griffith College Limerick'), ('CI', 'Irish College of Humanities and Applied Sciences'), ('LC', 'Limerick Institute of Technology (LIT)'), ('LM', 'University of Limerick (UL)'), ('MU', 'Pontifical University, St Patrick’s College'), ('MH', 'Maynooth University'), ('GY', 'Shannon College of Hotel Management'), ('AS', "St Angela's College"), ('SG', 'Institute of Technology, Sligo'), ('TL', 'Institute of Technology, Tralee (ITT)'), ('WD', 'Waterford Institute of Technology (WIT)')], default=None, max_length=100)),
                ('EducationDesc', models.CharField(default=None, max_length=250, verbose_name='Education Description')),
                ('EducationUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CvName', models.CharField(default=None, max_length=100, verbose_name='CvName')),
                ('CvEducation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Education')),
                ('CvSkills', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Skills')),
                ('CvWorkExperience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.WorkExperience')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
